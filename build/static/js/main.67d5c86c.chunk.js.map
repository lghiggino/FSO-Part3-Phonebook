{"version":3,"sources":["services/persons.js","components/PersonLi.js","components/AllNames.js","components/FilteredNames.js","components/FilterForm.js","components/AddPersonForm.js","App.js","index.js"],"names":["baseUrl","id","a","axios","delete","getAll","get","create","newObject","post","updateNumber","put","remove","PersonLi","person","setPersons","removePerson","console","log","personService","then","response","data","className","name","number","onClick","AllNames","persons","nameError","wrongName","phoneError","nameEditSuccess","map","FilteredNames","filterError","filteredPersonsArray","FilterForm","searchName","setSearchName","showAll","setFilteredPersonsArray","setFilterError","setShowAll","onSubmit","event","preventDefault","filteredArray","filter","el","toLowerCase","length","value","onChange","target","placeholder","type","AddPersonForm","newName","newPhone","setNewName","setNameError","setPhoneError","setWrongName","setNewPhone","setNameEditSuccess","some","alert","setTimeout","fullPersonData","concat","error","message","includes","App","useState","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67d5c86c.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"/api/persons\"\n//\"http://localhost:3004/api/persons\"\n//\"https://stark-temple-23512.herokuapp.com/api/persons\"\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst updateNumber = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nasync function remove(id) {\n    return await axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, updateNumber, remove }\n\n//rodar o backend na porta 3004, depois rodar o frontend, refazer as rotas de post e filtros","import personService from \"../services/persons\"\n\nexport default function PersonLi({ person, setPersons }) {\n    const removePerson = async (id) => {\n        console.log(id)\n        await personService.remove(id).then(response => {\n            console.log(response.data)\n            personService.getAll().then(response => {\n                setPersons(response.data)\n            })\n        })\n    }\n\n\n    return (\n        <li key={person.id} className={\"personLi\"}> {person.name}: {person.number} <button onClick={() => removePerson(person.id)}>remove</button> </li>\n    )\n}\n\n","import PersonLi from \"./PersonLi\"\n\nexport default function AllNames({ persons, nameError, wrongName, phoneError, setPersons, nameEditSuccess }) {\n    return (\n        <>\n            <h2>Names</h2>\n            {nameEditSuccess &&\n                <div>\n                    <p className={\"success\"}> Number changed successfully</p>\n                </div>\n            }\n            {nameError &&\n                <div>\n                    <p className={\"error\"}>{wrongName}'s number was not changed</p>\n                </div>\n            }\n            {phoneError &&\n                <div>\n                    <p className={\"error\"}>Must input a number</p>\n                </div>\n            }\n            <ul>\n                {persons.map(person => (\n                    <PersonLi key={person.id} person={person} setPersons={setPersons} />\n                    // <li key={person.id} className={\"personLi\"}> {person.name}: {person.number} <button>remove</button> </li>\n                ))}\n            </ul>\n\n        </>\n    )\n}","import PersonLi from \"./PersonLi\"\n\nexport default function FilteredNames({ filterError, filteredPersonsArray, setPersons }) {\n    return (\n        <>\n            <h2>Filtered</h2>\n            {filterError &&\n                <div>\n                    <p className={\"error\"}>Error: There was no match for the search query</p>\n                </div>\n            }\n            <ul>\n                {filteredPersonsArray.map(person => (\n                    <PersonLi key={person.id} person={person} setPersons={setPersons} />\n                ))}\n            </ul>\n        </>\n    )\n}","import { useState } from \"react\"\n\nexport default function FilterForm({ persons, filteredPersonsArray, searchName, filterError, showAll, setSearchName, setFilteredPersonsArray, setFilterError, setShowAll   }) {\n    const handleSearchNameChange = (event) => {\n        setSearchName(event.target.value)\n    }\n\n    const filterPerson = (event) => {\n        event.preventDefault()\n        console.log(searchName)\n        const filteredArray = persons.filter(el => el.name.toLowerCase() === searchName.toLowerCase())\n        if (filteredArray.length > 0) {\n            setFilteredPersonsArray(filteredArray)\n            setShowAll(false)\n            setFilterError(false)\n        } else {\n            setFilterError(true)\n            setShowAll(true)\n        }\n        setSearchName(\"\")\n    }\n\n    return (\n        <>\n            <form onSubmit={filterPerson}>\n                <label>Search person:</label>\n                <input value={searchName} onChange={handleSearchNameChange} placeholder={\"type a person name\"} />\n                <button type=\"submit\">search</button>\n            </form>\n        </>\n    )\n}","import axios from \"axios\"\nimport personService from \"../services/persons\"\n\nexport default function AddPersonForm({ persons, newName, newPhone, setPersons, setNewName, setNameError, setPhoneError, setWrongName, setNewPhone, setNameEditSuccess, }) {\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handlePhoneChange = (event) => {\n        setNewPhone(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (!newName) {\n            setNameError(true)\n        }\n\n        if (!newPhone) {\n            setPhoneError(true)\n        }\n        if (persons.some(el => el.name === newName)) {\n            alert(`Names must be unique. ${newName} was not saved`)\n            setNameError(true)\n            setTimeout(() => {\n                setNameError(false)\n            }, 5000)\n            setNameEditSuccess(false)\n            setWrongName(newName)\n            setNewName(\"\")\n            setNewPhone(\"\")\n            return\n            // let numberSubstitution = window.confirm(`${newName} is already in the phone book. Replace the old number with ${newPhone}?`)\n            // if (numberSubstitution) {\n            //     const singlePerson = persons.find(p => p.name === newName)\n            //     const changedPerson = { ...singlePerson, number: newPhone }\n\n            //     // se o nome já existe - PUT\n            //     personService.updateNumber(changedPerson.id, changedPerson).then(response => {\n            //         setPersons(persons.map(person => person.id !== response.data.id ? person : response.data))\n            //     }).then(nothing => {\n            //         setNameEditSuccess(true)\n            //         setNameError(false)\n            //         setTimeout(() => {\n            //             setNameEditSuccess(false)\n            //         }, 5000);\n            //         return\n            //     })\n            // }\n            // else {\n            //     setNameError(true)\n            //     setTimeout(() => { \n            //         setNameError(false)\n            //     }, 5000)\n            //     setNameEditSuccess(false)\n            //     setWrongName(newName)\n            //     setNewName(\"\")\n            //     setNewPhone(\"\")\n            //     return\n\n            // }\n        }\n\n        const fullPersonData = {\n            \"name\": newName,\n            \"number\": newPhone\n        }\n\n        console.log(fullPersonData)\n        // se é um novo nome - POST\n        try {\n            personService.create(fullPersonData).then(response => {\n                setPersons(persons.concat(response.data))\n            })\n        }catch(error){\n            if(error.message.includes(\"number\")){\n                setPhoneError(true)\n            }else if(error.message.includes(\"name missing\")){\n                setNameError(true)\n            }\n        }finally{\n            setTimeout(() => {\n                setPhoneError(false)\n                setNameError(false)\n            }, 4000)\n        }\n        \n        setNewName(\"\")\n        setNewPhone(\"\")\n        setNameError(false)\n        setPhoneError(false)\n    }\n\n    return (\n        <>\n            <form onSubmit={addPerson}>\n                <label>Add a new Person:</label>\n                <input value={newName} onChange={handlePersonChange} placeholder={\"a new name...\"} />\n                <input value={newPhone} onChange={handlePhoneChange} placeholder={\"add phone number\"} />\n                <button type=\"submit\">add</button>\n            </form>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react';\n//import axios from \"axios\"\nimport './App.css';\n\n\n/* PHONEBOOK */\nimport AllNames from \"./components/AllNames\"\nimport FilteredNames from './components/FilteredNames';\nimport FilterForm from \"./components/FilterForm\";\nimport AddPersonForm from './components/AddPersonForm';\n\nimport personService from \"./services/persons\"\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [nameError, setNameError] = useState(false)\n  const [phoneError, setPhoneError] = useState(false)\n  const [nameEditSuccess, setNameEditSuccess] = useState(false)\n  const [wrongName, setWrongName] = useState(\"\")\n  const [newPhone, setNewPhone] = useState(\"\")\n  const [searchName, setSearchName] = useState(\"\")\n  const [filteredPersonsArray, setFilteredPersonsArray] = useState([])\n  const [filterError, setFilterError] = useState(false)\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n\n      <AddPersonForm\n        persons={persons}\n        newName={newName}\n        // nameError={nameError}\n        // phoneError={phoneError}\n        // wrongName={wrongName}\n        newPhone={newPhone}\n        setPersons={setPersons}\n        setNewName={setNewName}\n        setNameError={setNameError}\n        setPhoneError={setPhoneError}\n        setWrongName={setWrongName}\n        setNewPhone={setNewPhone}\n        setNameEditSuccess={setNameEditSuccess}\n      />\n\n      <FilterForm\n        persons={persons}\n        filteredPersonsArray={filteredPersonsArray}\n        searchName={searchName}\n        filterError={filterError}\n        showAll={showAll}\n        setSearchName={setSearchName}\n        setFilteredPersonsArray={setFilteredPersonsArray}\n        setFilterError={setFilterError}\n        setShowAll={setShowAll}\n      />\n\n      <AllNames persons={persons} nameError={nameError} wrongName={wrongName} phoneError={phoneError} setPersons={setPersons} nameEditSuccess={nameEditSuccess} />\n\n      <FilteredNames filteredPersonsArray={filteredPersonsArray} filterError={filterError} setPersons={setPersons}/>\n\n    </div>\n  );\n}\n\n// THIS STAYS\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}