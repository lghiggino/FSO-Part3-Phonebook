{"version":3,"sources":["services/persons.js","components/PersonLi.js","components/AllNames.js","components/FilteredNames.js","components/FilterForm.js","components/AddPersonForm.js","App.js","index.js"],"names":["baseUrl","id","axios","delete","get","getAll","create","newObject","post","updateNumber","put","remove","PersonLi","person","setPersons","className","name","number","onClick","console","log","personService","then","response","data","AllNames","persons","nameError","wrongName","nameEditSuccess","map","FilteredNames","filterError","filteredPersonsArray","FilterForm","searchName","setSearchName","showAll","setFilteredPersonsArray","setFilterError","setShowAll","onSubmit","event","preventDefault","filteredArray","filter","el","toLowerCase","length","value","onChange","target","placeholder","type","AddPersonForm","newName","newPhone","setNewName","setNameError","setWrongName","setNewPhone","setNameEditSuccess","some","window","confirm","setTimeout","singlePerson","find","p","changedPerson","nothing","fullPersonData","concat","App","useState","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be83b5a9.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = (process.env.NODE_ENV === \"development\") | (process.env.NODE_ENV === \"test\")\n? \"http://localhost:3001/api/persons\"\n: \"api/persons\";\n\nconst getAll = () => {\n    return  axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst updateNumber = (id, newObject) => {\n    return  axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nasync function remove(id) {\n    await axios.delete(`${baseUrl}/${id}`)\n    return await axios.get(baseUrl)\n}\n\nexport default { getAll, create, updateNumber, remove }","import personService from \"../services/persons\"\n\nexport default function PersonLi({ person, setPersons }) {\n    const removePerson = (id) => {\n        console.log(id)\n        personService.remove(id).then(response => {\n            console.log(response.data)\n            setPersons(response.data)\n        })\n    }\n\n\n    return (\n        <li key={person.id} className={\"personLi\"}> {person.name}: {person.number} <button onClick={() => removePerson(person.id)}>remove</button> </li>\n    )\n}\n\n","import PersonLi from \"./PersonLi\"\n\nexport default function AllNames({ persons, nameError, wrongName, setPersons, nameEditSuccess }) {\n    return (\n        <>\n            <h2>Names</h2>\n            {nameEditSuccess &&\n                <div>\n                    <p className={\"success\"}> Number changed successfully</p>\n                </div>\n            }\n            {nameError &&\n                <div>\n                    <p className={\"error\"}>{wrongName}'s number was not changed</p>\n                </div>\n            }\n            <ul>\n                {persons.map(person => (\n                    <PersonLi key={person.id} person={person} setPersons={setPersons} />\n                    // <li key={person.id} className={\"personLi\"}> {person.name}: {person.number} <button>remove</button> </li>\n                ))}\n            </ul>\n\n        </>\n    )\n}","import PersonLi from \"./PersonLi\"\n\nexport default function FilteredNames({ filterError, filteredPersonsArray, setPersons }) {\n    return (\n        <>\n            <h2>Filtered</h2>\n            {filterError &&\n                <div>\n                    <p className={\"error\"}>Error: There was no match for the search query</p>\n                </div>\n            }\n            <ul>\n                {filteredPersonsArray.map(person => (\n                    <PersonLi key={person.id} person={person} setPersons={setPersons} />\n                ))}\n            </ul>\n        </>\n    )\n}","import { useState } from \"react\"\n\nexport default function FilterForm({ persons, filteredPersonsArray, searchName, filterError, showAll, setSearchName, setFilteredPersonsArray, setFilterError, setShowAll   }) {\n    const handleSearchNameChange = (event) => {\n        setSearchName(event.target.value)\n    }\n\n    const filterPerson = (event) => {\n        event.preventDefault()\n        console.log(searchName)\n        const filteredArray = persons.filter(el => el.name.toLowerCase() === searchName.toLowerCase())\n        if (filteredArray.length > 0) {\n            setFilteredPersonsArray(filteredArray)\n            setShowAll(false)\n            setFilterError(false)\n        } else {\n            setFilterError(true)\n            setShowAll(true)\n        }\n        setSearchName(\"\")\n    }\n\n    return (\n        <>\n            <form onSubmit={filterPerson}>\n                <label>Search person:</label>\n                <input value={searchName} onChange={handleSearchNameChange} placeholder={\"type a person name\"} />\n                <button type=\"submit\">search</button>\n            </form>\n        </>\n    )\n}","import axios from \"axios\"\nimport personService from \"../services/persons\"\n\nexport default function AddPersonForm({ persons, newName, newPhone, setPersons, setNewName, setNameError, setWrongName, setNewPhone, setNameEditSuccess }) {\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handlePhoneChange = (event) => {\n        setNewPhone(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.some(el => el.name === newName)) {\n            let numberSubstitution = window.confirm(`${newName} is already in the phone book. Replace the old number with ${newPhone}?`)\n            if (numberSubstitution) {\n                const singlePerson = persons.find(p => p.name === newName)\n                const changedPerson = { ...singlePerson, number: newPhone }\n\n                personService.updateNumber(changedPerson.id, changedPerson).then(response => {\n                    setPersons(persons.map(person => person.id !== response.data.id ? person : response.data))\n                }).then(nothing => {\n                    setNameEditSuccess(true)\n                    setNameError(false)\n                    setTimeout(() => {\n                        setNameEditSuccess(false)\n                    }, 5000);\n                    return\n                })\n            }\n            else {\n                setNameError(true)\n                setTimeout(() => { \n                    setNameError(false)\n                }, 5000)\n                setNameEditSuccess(false)\n                setWrongName(newName)\n                setNewName(\"\")\n                setNewPhone(\"\")\n                return\n            }\n        }\n        const fullPersonData = {\n            \"name\": newName,\n            \"number\": newPhone\n        }\n        personService.create(fullPersonData).then(response => {\n            setPersons(persons.concat(response.data))\n        })\n        setNewName(\"\")\n        setNewPhone(\"\")\n        setNameError(false)\n    }\n\n    return (\n        <>\n            <form onSubmit={addPerson}>\n                <label>Add a new Person:</label>\n                <input value={newName} onChange={handlePersonChange} placeholder={\"a new name...\"} />\n                <input value={newPhone} onChange={handlePhoneChange} placeholder={\"add phone number\"} />\n                <button type=\"submit\">add</button>\n            </form>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react';\n//import axios from \"axios\"\nimport './App.css';\n\n\n/* PHONEBOOK */\nimport AllNames from \"./components/AllNames\"\nimport FilteredNames from './components/FilteredNames';\nimport FilterForm from \"./components/FilterForm\";\nimport AddPersonForm from './components/AddPersonForm';\n\nimport personService from \"./services/persons\"\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [nameError, setNameError] = useState(false)\n  const [nameEditSuccess, setNameEditSuccess] = useState(false)\n  const [wrongName, setWrongName] = useState(\"\")\n  const [newPhone, setNewPhone] = useState(\"\")\n  const [searchName, setSearchName] = useState(\"\")\n  const [filteredPersonsArray, setFilteredPersonsArray] = useState([])\n  const [filterError, setFilterError] = useState(false)\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n\n      <AddPersonForm\n        persons={persons}\n        newName={newName}\n        nameError={nameError}\n        wrongName={wrongName}\n        newPhone={newPhone}\n        setPersons={setPersons}\n        setNewName={setNewName}\n        setNameError={setNameError}\n        setWrongName={setWrongName}\n        setNewPhone={setNewPhone}\n        setNameEditSuccess={setNameEditSuccess}\n      />\n\n      <FilterForm\n        persons={persons}\n        filteredPersonsArray={filteredPersonsArray}\n        searchName={searchName}\n        filterError={filterError}\n        showAll={showAll}\n        setSearchName={setSearchName}\n        setFilteredPersonsArray={setFilteredPersonsArray}\n        setFilterError={setFilterError}\n        setShowAll={setShowAll}\n      />\n\n      <AllNames persons={persons} nameError={nameError} wrongName={wrongName} setPersons={setPersons} nameEditSuccess={nameEditSuccess} />\n\n      <FilteredNames filteredPersonsArray={filteredPersonsArray} filterError={filterError} setPersons={setPersons}/>\n\n    </div>\n  );\n}\n\n\n/* NOTES */\n// import Note from './components/Note';\n// import Footer from \"./components/Footer\";\n\n// import noteService from \"./services/noteService\"\n\n// function App() {\n//   const [notes, setNotes] = useState([])\n//   const [newNote, setNewNote] = useState(\"\")\n//   const [showAll, setShowAll] = useState(true)\n//   const [errorMessage, setErrorMessage] = useState(null)\n\n//   useEffect(() => {\n//     loadNotes()\n//   }, [])\n\n//   async function loadNotes() {\n//     noteService.getAll().then(responseNotes => {\n//       setNotes(responseNotes)\n//     })\n//       .catch(error => {\n//         console.log(\"Failed to Load Notes\", error)\n//       })\n//   }\n\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       date: new Date().toISOString(),\n//       important: Math.random() < 0.4,\n//       // id: notes.length + 1\n//     }\n\n//     noteService.create(noteObject).then(response => {\n//       setNotes(notes.concat(response))\n//       setNewNote(\"\")\n//       setErrorMessage(null)\n//     })\n//       .catch(error => {\n//         console.log(\"Failed to Create New Note\", error)\n//         setErrorMessage(error)\n//       })\n//   }\n\n//   const handleNoteChange = (event) => {\n//     setNewNote(event.target.value)\n//   }\n\n//   const toggleImportanceOf = (id) => {\n//     const note = notes.find(n => n.id === id)\n//     const changedNote = { ...note, important: !note.important }\n//     console.log(\"changing importance of note\", id)\n//     setNotes(notes.map(note => note.id !== id ? note : changedNote))\n\n//     noteService.updateImportance(id, changedNote).then(responseNote => {\n//       setNotes(notes.map(note => note.id !== id ? note : responseNote))\n//     })\n//       .catch(error => {\n//         console.log(\"Failed to Update Importance\", error)\n//       })\n//       .finally(\n//         setTimeout(() => {\n//           setErrorMessage(null)\n//         }, 5000)\n//       )\n//   }\n\n//   async function updateDateOf(id) {\n//     const note = notes.find(n => n.id === id)\n//     const newDate = new Date().toISOString()\n//     const changedNote = { ...note }\n//     changedNote.date = newDate\n\n//     noteService.updateDate(id, changedNote).then(responseNote => {\n//       setNotes(notes.map(note => note.id !== id ? note : responseNote))\n//     })\n//       .catch(error => {\n//         setErrorMessage(`Note ${note.content}'s was already removed`, error)\n//       })\n//       .finally(\n//         setTimeout(() => {\n//           setErrorMessage(null)\n//         }, 5000)\n//       )\n//     //setNotes(notes.filter(n => n.id !== id))\n\n//   }\n\n//   async function removeNote(id) {\n//     const note = notes.find(n => n.id === id)\n\n//     await noteService.remove(id, note).then(\n//       loadNotes()\n//     ).catch(error => {\n//       console.log(\"Failed to Delete note\", error)\n//     })\n\n\n//   }\n\n//   const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Notes</h1>\n//       {errorMessage ? <h2>{errorMessage.message}</h2> : \"\"}\n//       <div>\n//         <button onClick={() => { setShowAll(!showAll) }}>\n//           show {showAll ? \"important\" : \"all\"}\n//         </button>\n//       </div>\n//       <ul>\n//         {notesToShow.map(note =>\n//           <Note\n//             key={note.id}\n//             note={note}\n//             toggleImportance={() => toggleImportanceOf(note.id)}\n//             updateDate={() => updateDateOf(note.id)}\n//             removeNote={() => removeNote(note.id)}\n//           />)}\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input value={newNote} onChange={handleNoteChange} placeholder={\"A new note...\"} />\n//         <button type=\"submit\">save note</button>\n//       </form>\n//       <Footer />\n//     </div>\n//   )\n// }\n\n\n\n// THIS STAYS\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}