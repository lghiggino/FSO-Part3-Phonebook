{"version":3,"sources":["services/persons.js","components/PersonLi.js","components/AllNames.js","components/FilteredNames.js","components/FilterForm.js","components/AddPersonForm.js","App.js","index.js"],"names":["baseUrl","id","a","axios","delete","getAll","get","create","newObject","post","updateNumber","put","remove","PersonLi","person","setPersons","className","name","number","onClick","console","log","personService","then","response","data","AllNames","persons","nameError","wrongName","nameEditSuccess","map","FilteredNames","filterError","filteredPersonsArray","FilterForm","searchName","setSearchName","showAll","setFilteredPersonsArray","setFilterError","setShowAll","onSubmit","event","preventDefault","filteredArray","filter","el","toLowerCase","length","value","onChange","target","placeholder","type","AddPersonForm","newName","newPhone","setNewName","setNameError","setWrongName","setNewPhone","setNameEditSuccess","some","alert","setTimeout","fullPersonData","concat","App","useState","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21df81a1.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl =\"http://localhost:3004/api/persons\"\n//\"http://localhost:3004/api/persons\"\n//\"https://stark-temple-23512.herokuapp.com/api/persons\"\n\nconst getAll = () => {\n    return  axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst updateNumber = (id, newObject) => {\n    return  axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nasync function remove(id) {\n    return await axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, updateNumber, remove }\n\n//rodar o backend na porta 3004, depois rodar o frontend, refazer as rotas de post e filtros","import personService from \"../services/persons\"\n\nexport default function PersonLi({ person, setPersons }) {\n    const removePerson = (id) => {\n        console.log(id)\n        personService.remove(id).then(response => {\n            console.log(response.data)\n            setPersons(response.data)\n        })\n    }\n\n\n    return (\n        <li key={person.id} className={\"personLi\"}> {person.name}: {person.number} <button onClick={() => removePerson(person.id)}>remove</button> </li>\n    )\n}\n\n","import PersonLi from \"./PersonLi\"\n\nexport default function AllNames({ persons, nameError, wrongName, setPersons, nameEditSuccess }) {\n    return (\n        <>\n            <h2>Names</h2>\n            {nameEditSuccess &&\n                <div>\n                    <p className={\"success\"}> Number changed successfully</p>\n                </div>\n            }\n            {nameError &&\n                <div>\n                    <p className={\"error\"}>{wrongName}'s number was not changed</p>\n                </div>\n            }\n            <ul>\n                {persons.map(person => (\n                    <PersonLi key={person.id} person={person} setPersons={setPersons} />\n                    // <li key={person.id} className={\"personLi\"}> {person.name}: {person.number} <button>remove</button> </li>\n                ))}\n            </ul>\n\n        </>\n    )\n}","import PersonLi from \"./PersonLi\"\n\nexport default function FilteredNames({ filterError, filteredPersonsArray, setPersons }) {\n    return (\n        <>\n            <h2>Filtered</h2>\n            {filterError &&\n                <div>\n                    <p className={\"error\"}>Error: There was no match for the search query</p>\n                </div>\n            }\n            <ul>\n                {filteredPersonsArray.map(person => (\n                    <PersonLi key={person.id} person={person} setPersons={setPersons} />\n                ))}\n            </ul>\n        </>\n    )\n}","import { useState } from \"react\"\n\nexport default function FilterForm({ persons, filteredPersonsArray, searchName, filterError, showAll, setSearchName, setFilteredPersonsArray, setFilterError, setShowAll   }) {\n    const handleSearchNameChange = (event) => {\n        setSearchName(event.target.value)\n    }\n\n    const filterPerson = (event) => {\n        event.preventDefault()\n        console.log(searchName)\n        const filteredArray = persons.filter(el => el.name.toLowerCase() === searchName.toLowerCase())\n        if (filteredArray.length > 0) {\n            setFilteredPersonsArray(filteredArray)\n            setShowAll(false)\n            setFilterError(false)\n        } else {\n            setFilterError(true)\n            setShowAll(true)\n        }\n        setSearchName(\"\")\n    }\n\n    return (\n        <>\n            <form onSubmit={filterPerson}>\n                <label>Search person:</label>\n                <input value={searchName} onChange={handleSearchNameChange} placeholder={\"type a person name\"} />\n                <button type=\"submit\">search</button>\n            </form>\n        </>\n    )\n}","import axios from \"axios\"\nimport personService from \"../services/persons\"\n\nexport default function AddPersonForm({ persons, newName, newPhone, setPersons, setNewName, setNameError, setWrongName, setNewPhone, setNameEditSuccess }) {\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handlePhoneChange = (event) => {\n        setNewPhone(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.some(el => el.name === newName)) {\n            alert(`Names must be unique. ${newName} was not saved`)\n            setNameError(true)\n            setTimeout(() => {\n                setNameError(false)\n            }, 5000)\n            setNameEditSuccess(false)\n            setWrongName(newName)\n            setNewName(\"\")\n            setNewPhone(\"\")\n            return\n            // let numberSubstitution = window.confirm(`${newName} is already in the phone book. Replace the old number with ${newPhone}?`)\n            // if (numberSubstitution) {\n            //     const singlePerson = persons.find(p => p.name === newName)\n            //     const changedPerson = { ...singlePerson, number: newPhone }\n\n            //     // se o nome jÃ¡ existe - PUT\n            //     personService.updateNumber(changedPerson.id, changedPerson).then(response => {\n            //         setPersons(persons.map(person => person.id !== response.data.id ? person : response.data))\n            //     }).then(nothing => {\n            //         setNameEditSuccess(true)\n            //         setNameError(false)\n            //         setTimeout(() => {\n            //             setNameEditSuccess(false)\n            //         }, 5000);\n            //         return\n            //     })\n            // }\n            // else {\n            //     setNameError(true)\n            //     setTimeout(() => { \n            //         setNameError(false)\n            //     }, 5000)\n            //     setNameEditSuccess(false)\n            //     setWrongName(newName)\n            //     setNewName(\"\")\n            //     setNewPhone(\"\")\n            //     return\n\n            // }\n        }\n\n        const fullPersonData = {\n            \"name\": newName,\n            \"number\": newPhone\n        }\n\n        console.log(fullPersonData)\n        // se Ã© um novo nome - POST\n        personService.create(fullPersonData).then(response => {\n            setPersons(persons.concat(response.data))\n        })\n        setNewName(\"\")\n        setNewPhone(\"\")\n        setNameError(false)\n    }\n\n    return (\n        <>\n            <form onSubmit={addPerson}>\n                <label>Add a new Person:</label>\n                <input value={newName} onChange={handlePersonChange} placeholder={\"a new name...\"} />\n                <input value={newPhone} onChange={handlePhoneChange} placeholder={\"add phone number\"} />\n                <button type=\"submit\">add</button>\n            </form>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react';\n//import axios from \"axios\"\nimport './App.css';\n\n\n/* PHONEBOOK */\nimport AllNames from \"./components/AllNames\"\nimport FilteredNames from './components/FilteredNames';\nimport FilterForm from \"./components/FilterForm\";\nimport AddPersonForm from './components/AddPersonForm';\n\nimport personService from \"./services/persons\"\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [nameError, setNameError] = useState(false)\n  const [nameEditSuccess, setNameEditSuccess] = useState(false)\n  const [wrongName, setWrongName] = useState(\"\")\n  const [newPhone, setNewPhone] = useState(\"\")\n  const [searchName, setSearchName] = useState(\"\")\n  const [filteredPersonsArray, setFilteredPersonsArray] = useState([])\n  const [filterError, setFilterError] = useState(false)\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h2>Phonebook</h2>\n\n      <AddPersonForm\n        persons={persons}\n        newName={newName}\n        nameError={nameError}\n        wrongName={wrongName}\n        newPhone={newPhone}\n        setPersons={setPersons}\n        setNewName={setNewName}\n        setNameError={setNameError}\n        setWrongName={setWrongName}\n        setNewPhone={setNewPhone}\n        setNameEditSuccess={setNameEditSuccess}\n      />\n\n      <FilterForm\n        persons={persons}\n        filteredPersonsArray={filteredPersonsArray}\n        searchName={searchName}\n        filterError={filterError}\n        showAll={showAll}\n        setSearchName={setSearchName}\n        setFilteredPersonsArray={setFilteredPersonsArray}\n        setFilterError={setFilterError}\n        setShowAll={setShowAll}\n      />\n\n      <AllNames persons={persons} nameError={nameError} wrongName={wrongName} setPersons={setPersons} nameEditSuccess={nameEditSuccess} />\n\n      <FilteredNames filteredPersonsArray={filteredPersonsArray} filterError={filterError} setPersons={setPersons}/>\n\n    </div>\n  );\n}\n\n// THIS STAYS\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}